---
export interface Props {
  title: string;
  description: string;
}

const { title } = Astro.props;
const { description } = Astro.props;
---

<div class="relative h-80 border border-solid border-white border-opacity-10 rounded-2xl spotlight">
  <div class="pr-6 pt-7 pl-4 h-full grid grid-rows-4 text-muted hover:text-white">
    <div class="text-2xl text-white font-gilmer-heavy">{title}</div>
    <div class="text-base font-gilmer-regular row-span-3">
      {description}
    </div>
  </div>
</div>

<script>
  const spotlight_cards = document.getElementsByClassName('spotlight');

  for (let card of spotlight_cards) {
    // Create spotlight element that gives spotlight effect to cards
    const spotlight_elem = document.createElement('div');
    spotlight_elem.className = 'pointer-events-none absolute -inset-px opacity-0 transition duration-300';

    // Add card's border radius for smooth appearance
    const border_radius = window.getComputedStyle(card).borderRadius;
    spotlight_elem.style.borderRadius = border_radius;

    card.prepend(spotlight_elem);

    card.addEventListener('mousemove', (e) => {
      let { left, top } = e.currentTarget.getBoundingClientRect();
      let cursorX = e.clientX - left;
      let cursorY = e.clientY - top;
      card.firstChild.style.background = `radial-gradient(250px circle at ${cursorX}px ${cursorY}px, rgba(255, 148, 49, 0.16), transparent 80%)`;
      card.firstChild.style.opacity = '1';
    });

    card.addEventListener('mouseleave', (e) => {
      card.firstChild.style.opacity = '0';
    });
  }
</script>
